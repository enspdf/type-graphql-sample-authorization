{
  "compilerOptions": {
    "target": "es2016",
    /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017','ES2018' or 'ESNEXT'. */
    "module": "commonjs",
    /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */
    "lib": [ /* Specify library files to be included in the compilation. */
      "es2016",
      "esnext.asynciterable"
    ],
    "declaration": true,
    /* Generates corresponding '.d.ts' file. */
    "sourceMap": true,
    /* Generates corresponding '.map' file. */

    "outDir": "./build",
    /* Redirect output structure to the directory. */

    "removeComments": false,
    /* Do not emit comments to output. */

    "importHelpers": true,
    /* Import emit helpers from 'tslib'. */


    "strict": false,
    /* Enable all strict type-checking options. */
    "noImplicitAny": true,
    /* Raise error on expressions and declarations with an implied 'any' type. */
    "strictNullChecks": true,
    /* Enable strict null checks. */
    "strictFunctionTypes": true,
    /* Enable strict checking of function types. */
    "strictPropertyInitialization": false,
    /* Enable strict checking of property initialization in classes. */
    "noImplicitThis": true,
    /* Raise error on 'this' expressions with an implied 'any' type. */
    "alwaysStrict": true,
    /* Parse in strict mode and emit "use strict" for each source file. */


    "noUnusedLocals": false,
    /* Report errors on unused locals. */
    "noUnusedParameters": false,
    /* Report errors on unused parameters. */
    "noImplicitReturns": true,
    /* Report error when not all code paths in function return a value. */
    "noFallthroughCasesInSwitch": true,
    /* Report errors for fallthrough cases in switch statement. */


    "moduleResolution": "node",
    /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
    "allowSyntheticDefaultImports": false,
    /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
    "esModuleInterop": false,
    /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */

    "forceConsistentCasingInFileNames": true,
    "skipLibCheck": true,
    /* Don't check libs typings - due to https://github.com/prisma/graphql-request/issues/26 */

    "experimentalDecorators": true,
    /* Enables experimental support for ES7 decorators. */
    "emitDecoratorMetadata": true
  }
}